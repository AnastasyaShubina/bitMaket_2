// Data-----
export const up = [
  100,
  99.924,
  100.325,
  99.761,
  101.339,
  101.672,
  102.705,
  102.239,
  102.148,
  101.54,
  102.716,
  103.209,
  103.566,
  103.939,
  104.657,
  106.537,
  106.648,
  109.086,
  109.548,
  112.903,
  112.442,
  113.831,
  111.729,
  109.104,
  109.515,
  107.873,
  107.432,
  105.693,
  106.274,
  108.463,
  111.342,
  112.537,
  115.465,
  116.173,
  117.996,
  117.983,
  119.861,
  118.206,
  116.428,
  114.258,
  114.843,
  112.032,
  110.644,
  110.623,
  110.501,
  109.829,
  111.342,
  110.596,
  109.889,
  111.342,
  110.803,
  113.228,
  115.29,
  115.27,
  114.028,
  113.046,
  114.713,
  112.235,
  110.997,
  109.753,
  109.325,
  108.719,
  109.407,
  108.202,
  109.222,
  110.082,
  108.35,
  108.472,
  107.743,
  107.934,
  106.19,
  108.106,
  108.537,
  108.671,
  107.316,
  107.689,
  108.704,
  107.966,
  108.556,
  107.99,
  109.653,
  110.339,
  110.749,
  111.825,
  110.738,
  112.725,
  111.436,
  110.662,
  111.379,
  111.133,
  110.622,
  110.721,
  111.092,
  110.053,
  109.327,
  111.013,
  110.815,
  110.284,
  110.997,
  111.289,
];
export const down = [
  100,
  99.224,
  101.022,
  99.058,
  100.081,
  98.775,
  98.479,
  97.205,
  99.722,
  99.451,
  97.506,
  99.874,
  96.979,
  94.483,
  91.563,
  89.546,
  85.346,
  85.693,
  84.478,
  82.148,
  81.302,
  84.592,
  86.666,
  87.814,
  89.461,
  91.149,
  89.586,
  90.51,
  90.368,
  89.898,
  90.779,
  89.734,
  88.418,
  86.482,
  87.053,
  89.312,
  91.103,
  89.17,
  90.805,
  89.507,
  87.122,
  86.101,
  84.976,
  86.273,
  86.87,
  87.276,
  85.853,
  86.517,
  85.511,
  86.342,
  88.793,
  89.654,
  90.1,
  91.293,
  90.936,
  89.557,
  91.233,
  93.044,
  92.176,
  93.275,
  91.302,
  92.731,
  92.944,
  91.512,
  92.702,
  90.25,
  90.879,
  90.911,
  89.295,
  89.216,
  88.058,
  89.675,
  89.013,
  90.036,
  91.304,
  89.873,
  90.723,
  91.261,
  89.975,
  90.107,
  92.404,
  92.686,
  93.809,
  93.83,
  91.207,
  91.979,
  92.611,
  92.745,
  92.236,
  93.719,
  91.022,
  91.167,
  91.704,
  92.852,
  92.163,
  93.145,
  93.693,
  93.495,
  93.689,
  92.427,
]
export const accum = [
  100,
  101.965,
  101.235,
  101.864,
  101.395,
  100.888,
  99.55,
  101.06,
  101.857,
  100.789,
  99.131,
  101.593,
  99.845,
  99.718,
  99.233,
  100.316,
  101.837,
  99.941,
  100.335,
  100.668,
  100.406,
  97.839,
  97.912,
  96.267,
  97.568,
  96.53,
  96.062,
  96.412,
  95.021,
  96.533,
  96.202,
  95.163,
  96.449,
  96.162,
  96.663,
  94.96,
  96.752,
  97.8,
  96.085,
  95.653,
  96.737,
  96.816,
  96.972,
  98.439,
  99.3,
  102.746,
  103.613,
  104.416,
  106.602,
  105.235,
  105.878,
  105.389,
  105.069,
  106.393,
  104.033,
  104.113,
  105.32,
  105.474,
  104.833,
  104.384,
  105.267,
  105.18,
  106.642,
  104.234,
  104.717,
  106.498,
  105.188,
  105.063,
  104.774,
  106.692,
  104.916,
  101.67,
  99.208,
  101.969,
  99.56,
  100.022,
  100.768,
  100.366,
  102.712,
  101.101,
  100.071,
  102.634,
  101.641,
  100.277,
  99.352,
  100.211,
  99.601,
  99.53,
  99.799,
  99.938,
  101.127,
  101.256,
  101.667,
  99.792,
  100.631,
  101.535,
  101.652,
  100.77,
  99.695,
  101.528,
]

export let data = [];
const now = new Date(); // Получаем текущую дату и время

for (let i = 0; i < 100; i++) {
  const date = new Date(now);
  date.setMinutes(now.getMinutes() + i * 15); // Увеличиваем дату на i * 15 минут
  data.push({ x: date, y: up[i] });
}

// Animation-----
const totalDuration = 4000;
const delayBetweenPoints = totalDuration / data.length;
const previousY = (ctx) =>
  ctx.index === 0
    ? ctx.chart.scales.y.getPixelForValue(100)
    : ctx.chart.getDatasetMeta(ctx.datasetIndex).data[ctx.index - 1].getProps(['y'], true).y;

const animation = {
  x: {
    type: 'number',
    easing: 'linear',
    duration: delayBetweenPoints,
    from: NaN, // the point is initially skipped
    delay(ctx) {
      if (ctx.type !== 'data' || ctx.xStarted) {
        return 0;
      }
      ctx.xStarted = true;
      return ctx.index * delayBetweenPoints;
    }
  },
  y: {
    type: 'number',
    easing: 'linear',
    duration: delayBetweenPoints,
    from: previousY,
    delay(ctx) {
      if (ctx.type !== 'data' || ctx.yStarted) {
        return 0;
      }
      ctx.yStarted = true;
      return ctx.index * delayBetweenPoints;
    }
  }
};
// Animation-----

// Config-----
export const config = {
  type: 'line',
  data: {
    datasets: [{
      borderColor: "#0FFBE4",
      borderWidth: 2,
      radius: 0,
      spanGaps: true,
      data: data,
    }]
  },
  options: {
    maintainAspectRatio: false,
    spanGaps: true,
    animation,
    interaction: {
      intersect: false

    },
    plugins: {
      legend: {
        display: false,
      },
    },
    scales: {
      x: {
        type: 'time', // Меняем тип шкалы на временную
        time: {
          unit: 'hour', // Отображение данных по дням
          displayFormats: {
            day: 'dd.MM'
          },
        },
        title: {
          display: false,
          text: 'Date' // Название оси x
        }
      },
      y: {
        beginAtZero: true, // Начинать от нуля
        min: 80,            // Минимальное значение на шкале
        max: 120,
        title: {
          display: false,
          text: 'USDT', // Название оси y
        },
        ticks: {
          callback: function (value, index, values) {
            return '$' + value; // Добавляем значок доллара перед значением
          }
        },
        type: 'linear'
      }
    }
  }
};
// Config-----


